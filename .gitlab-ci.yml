workflow:
  auto_cancel:
    on_new_commit: conservative
  rules:
    - if: $CI_COMMIT_TITLE =~ /-noci$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  IMAGE_NAME: jukeblog
  IMAGE_TAG: $GitVersion_SemVer
  IMAGE_REF: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
  SAST_IMAGE_SUFFIX: "-fips"
      
stages:
  - .pre
  - test
  - build
  - publish
  - release

version:
  stage: .pre
  image:
    name: gittools/gitversion:5.6.6
    entrypoint: [""]
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0
  script:
    - /tools/dotnet-gitversion /output buildserver
    - grep 'GitVersion_SemVer=' gitversion.properties >> gitver.env
    - grep 'GitVersion_FullSemVer' gitversion.properties >> gitver.env
  artifacts:
    reports:
      dotenv: gitver.env

build:image:
  stage: build
  image: docker:24.0.5-dind
  services:
    - docker:24.0.5-dind
  needs:
    - job: version
      artifacts: true
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    - docker build . -t $IMAGE_REF
  after_script:
    docker save --output $IMAGE_NAME-$IMAGE_TAG.tar $IMAGE_REF
  artifacts:
    paths:
      - $IMAGE_NAME-$IMAGE_TAG.tar

publish:
  stage: publish
  image: docker:24.0.5-dind
  services:
    - docker:24.0.5-dind
  needs:
    - job: version
      artifacts: true
    - job: build:image
      artifacts: true
  variables:
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker load --input $IMAGE_NAME-$IMAGE_TAG.tar
  script:
    - docker push $IMAGE_REF

release:
  stage: release
  image: docker:24.0.5-dind
  services:
    - docker:24.0.5-dind
  needs:
    - job: version
      artifacts: true
    - job: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    DOCKER_HOST: tcp://docker:2375
    IMAGE_REF_LATEST: $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker pull $IMAGE_REF
    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
  script:
    - docker tag $IMAGE_REF $IMAGE_REF_LATEST
    - docker save --output $IMAGE_NAME-latest.tar $IMAGE_REF_LATEST
  after_script:
    - docker push $IMAGE_REF_LATEST
  release:
    tag_name: $IMAGE_TAG
    description: "Latest release (v{$IMAGE_TAG}) of the $IMAGE_NAME image."
    ref: $CI_COMMIT_SHA
    assets:
      links:
        - name: "$IMAGE_NAME-latest.tar"
          url: $CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/main/download?job=release
        - name: "$IMAGE_NAME-$IMAGE_TAG.tar"
          url: $CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/main/download?job=publish
